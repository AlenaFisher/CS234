/**
 * @author  Alena Fisher
 * 5/7/2024
 */

// Importing all necessary classes
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import javax.swing.JOptionPane;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.LinkedList;
import java.util.ListIterator;

public class Field_GUI extends javax.swing.JFrame {
    /**
     * This is the main entry point of this class file
     * This file allows for the creation, updating, display, and removal of baseball and softball games at the sports club
     */
    
    // Delcaring varibles
    private static GameSchedule fieldSchedule;
    private static Teams softballTeams; 
    private static Teams baseballTeams;
    private static String fileLocation = "Field.dat";
    
    public Field_GUI() {
        /**
         * This constructor initializes all components for the file and the field schedule, softball teams, and baseball teams
         */
        initComponents();
        fieldSchedule = new GameSchedule();
        softballTeams = new Teams();
        baseballTeams = new Teams();
        
        // Adding softball teams to the list
        Team womensSoftball = new Team("Women's National Softball Team", "Kyla Holas", "Oklahoma City", "Oklahoma", "16");
        softballTeams.addTeam(womensSoftball);
        
        // Adding baseball teams to the list
        Team arizonaDiamondbacks = new Team("Arizona Diamondbacks", "Tory Lovullo", "Phoenix", "Arizona", "26");
        baseballTeams.addTeam(arizonaDiamondbacks);
        
        Team pittsburghPirates = new Team("Pittsburgh Pirates", "Derek Shelton", "Pittsburgh", "Pennsylvania", "26");
        baseballTeams.addTeam(pittsburghPirates);
        
        Team torontoBlueJays = new Team("Toronto Blue Jays", "John Schneider", "Toronto", "Ontario", "26");
        baseballTeams.addTeam(torontoBlueJays);
        
        Team newYorkMets = new Team("New York Mets", "Carlos Mendoza", "Flushing", "New York", "26");
        baseballTeams.addTeam(newYorkMets);
        
        Team minnesotaTwins = new Team("Minnesota Twins", "Rocco Baldello", "Minneapolis", "Minnesota", "27");
        baseballTeams.addTeam(minnesotaTwins);
        
        String s = "";
        
        // Linked lists to receive the baseball teams and all their information
        LinkedList<Team> team = baseballTeams.getTeam();
        LinkedList<Team> teams = baseballTeams.getTeams();
        
        // Linked lists to iterate through the list of teams and their information
        ListIterator<Team> iterator = teams.listIterator();
        ListIterator<Team> iter = team.listIterator();

        // While loop to search through the list of teams
            while(iterator.hasNext()) {
            Team j = iterator.next();
            // While loop to search through the list of information for each team and print it out
            while(iter.hasNext()) {
                Team l = iter.next();
                s += "Team: " + l.getTeamName() + "\nCoach: " + l.getCoach() + "\nCity: " + l.getCity() + "\nState: " + l.getState() + "\nPlayers " + l.getNumOfPlayers() + "\n";
                txtDisplayTeams.setText(s);
            }
            }


    }

    public Field_GUI(Club aClub) {
        /**
         * This constructor receives 'aClub' as an explicit parameter and creates an object for the window to be opened
         */
        this();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabFieldDisplayTeam = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTeam1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTeam2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtGameDate = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtGameTime = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtLocation = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        txtFieldTeams = new javax.swing.JTextArea();
        btnFieldAddGame = new javax.swing.JButton();
        txtClear = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblFieldSchedule = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtDisplayTeams = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();

        setTitle("Field");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Team 1:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        txtTeam1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTeam1ActionPerformed(evt);
            }
        });
        jPanel1.add(txtTeam1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 200, -1));

        jLabel3.setText("Team 2:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));
        jPanel1.add(txtTeam2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 200, -1));

        jLabel4.setText("Game Date:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));
        jPanel1.add(txtGameDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 200, -1));

        jLabel5.setText("Game Time:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, -1));
        jPanel1.add(txtGameTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 200, -1));

        jLabel6.setText("Location (Baseball/Softball field):");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));
        jPanel1.add(txtLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 200, -1));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setBorder(javax.swing.BorderFactory.createTitledBorder("Schedule Game"));
        jScrollPane1.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 240, 280));

        txtFieldTeams.setEditable(false);
        txtFieldTeams.setColumns(20);
        txtFieldTeams.setRows(5);
        txtFieldTeams.setText("Softball Teams\n- National Women's \nSoftball Team\n\nBaseball Teams\n- Arizona Diamondbacks\n- Minnesota Twins\n- New York Mets\n- Pittsburgh Penguins\n- Toronto Blue Jays\n ");
        txtFieldTeams.setBorder(javax.swing.BorderFactory.createTitledBorder("Team"));
        jPanel1.add(txtFieldTeams, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, 240, 280));

        btnFieldAddGame.setText("Schedule");
        btnFieldAddGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFieldAddGameActionPerformed(evt);
            }
        });
        jPanel1.add(btnFieldAddGame, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 190, -1, -1));

        txtClear.setText("Clear");
        txtClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClearActionPerformed(evt);
            }
        });
        jPanel1.add(txtClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 220, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Field.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 601, 296));
        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 120, -1, -1));

        tabFieldDisplayTeam.addTab("Schedule Game", jPanel1);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblFieldSchedule.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Team 1", "Team 2", "Date", "Time", "Location"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblFieldSchedule);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 580, 280));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Field.jpg"))); // NOI18N
        jLabel7.setText("jLabel7");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 300));

        tabFieldDisplayTeam.addTab("Game Information", jPanel2);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtDisplayTeams.setEditable(false);
        txtDisplayTeams.setColumns(20);
        txtDisplayTeams.setRows(5);
        jScrollPane4.setViewportView(txtDisplayTeams);

        jPanel3.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 580, 280));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Field.jpg"))); // NOI18N
        jLabel8.setText("jLabel8");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 302));

        tabFieldDisplayTeam.addTab("Team Information", jPanel3);

        getContentPane().add(tabFieldDisplayTeam, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 615, 353));

        setSize(new java.awt.Dimension(634, 372));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtTeam1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTeam1ActionPerformed

    }//GEN-LAST:event_txtTeam1ActionPerformed

    private void btnFieldAddGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFieldAddGameActionPerformed
            /**
            * This method collects the information from the user and creates either a softball or baseball game that is stored
            * in the field's game schedule
            */
        
            // Gathering the input from the user entered into the text fields
            String team1 = txtTeam1.getText();
            String team2 = txtTeam2.getText();
            String gameDate = txtGameDate.getText();
            String gameTime = txtGameTime.getText();
            String location = txtLocation.getText();
            
            // Creating the game and adding it to the game schedule
            Game game = new Game(team1, team2, gameDate, gameTime, location);
        
            // Testing if any of the text fields are left empty by the user
            if(txtTeam1.getText().isEmpty() || txtTeam2.getText().isEmpty() || txtGameDate.getText().isEmpty() || txtGameTime.getText().isEmpty() || txtLocation.getText().isEmpty()) {
                // Message to the user if any of the text fields were not filled out
                JOptionPane.showMessageDialog(this, "Enter all fields");
            }
       
            // If all the fields are filled out, the information is gathered and placed into a row in the table
            else {
                String[] row = {txtTeam1.getText(), txtTeam2.getText(), txtGameDate.getText(), txtGameTime.getText(), txtLocation.getText()};
                // Table to display the games to the user
                DefaultTableModel model = (DefaultTableModel)tblFieldSchedule.getModel();
                // Information is added to the table
                model.addRow(row);
            
                // Message to the user that the game scheduling was successful
                JOptionPane.showMessageDialog(this, "Game added");
            } 
    }//GEN-LAST:event_btnFieldAddGameActionPerformed

    private void txtClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClearActionPerformed
        /**
         * This method calls the 'clearFields' method to reset all text fields to be empty
         */
        clearFields();
    }//GEN-LAST:event_txtClearActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // Table to display the games
        DefaultTableModel model = (DefaultTableModel)tblFieldSchedule.getModel();
        // Array list to store the data from the table
        ArrayList<String> tableData = new ArrayList<>();
        
        // For loop to gather the information from the table row by row and store it in the array list
        for(int i = 0; i < model.getRowCount(); i++) {
            String team1 = model.getValueAt(i, 0).toString();
            String team2 = model.getValueAt(i, 1).toString();
            String gameDate = model.getValueAt(i, 2).toString();
            String gameTime = model.getValueAt(i, 3).toString();
            String location = model.getValueAt(i, 4).toString();
            
             // Data is compiled and added to the array list
            String row = team1 + "," + team2 + "," + gameDate + "," + gameTime + "," + location;
            tableData.add(row);
            
            // try-catch to attempt storing the information in the dat file
            try {
                // Opening the file
                FileOutputStream file = new FileOutputStream("Field.dat");
                ObjectOutputStream output = new ObjectOutputStream(file);
                
                // Storing the information in the file
                output.writeObject(tableData);
                
                // Closing the files
                output.close();
                file.close();
            }
            // If storing the information is unsuccessful, it catches the error
            catch(Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_formWindowClosing

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed

    }//GEN-LAST:event_formWindowClosed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // try-catch to place the information stored in the file into the tables
        try { 
            // Opening the file
            FileInputStream file = new FileInputStream("Field.dat");
            ObjectInputStream input = new ObjectInputStream(file);
            // Adding the information to the array list
            ArrayList<String> tableData = (ArrayList<String>)input.readObject();
        
            // Closing the files
            input.close();
            file.close();
        
            // Table for displaying game schedule
            DefaultTableModel model = (DefaultTableModel)tblFieldSchedule.getModel();
            // Adding the information into the table
            for(int i = 0; i < tableData.size(); i++) {
                String[] row = tableData.get(i).split(",");
                model.addRow(row);
            }
        }
        // If placing the information is unsuccessful, it catches the error
        catch(Exception e) {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_formWindowOpened

    private void clearFields() {
        /**
         * This method sets all text fields to be empty so the user can schedule another game if they wish 
         */
        txtTeam1.setText("");
        txtTeam2.setText("");
        txtGameDate.setText("");
        txtGameTime.setText("");
        txtLocation.setText("");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Field_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Field_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Field_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Field_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Field_GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFieldAddGame;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTabbedPane tabFieldDisplayTeam;
    private javax.swing.JTable tblFieldSchedule;
    private javax.swing.JButton txtClear;
    private javax.swing.JTextArea txtDisplayTeams;
    private javax.swing.JTextArea txtFieldTeams;
    private javax.swing.JTextField txtGameDate;
    private javax.swing.JTextField txtGameTime;
    private javax.swing.JTextField txtLocation;
    private javax.swing.JTextField txtTeam1;
    private javax.swing.JTextField txtTeam2;
    // End of variables declaration//GEN-END:variables
}
